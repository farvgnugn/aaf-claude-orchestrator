version: "3.9"
services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: orchestrator
    ports: ["5433:5432"]
    volumes: [ "pgdata:/var/lib/postgresql/data" ]
    networks:
      - orchestrator-network

  redis:
    image: redis:7-alpine
    ports: ["6380:6379"]
    networks:
      - orchestrator-network

  api:
    build:
      context: .
      dockerfile: .devcontainer/Dockerfile
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgres://postgres:postgres@db:5432/orchestrator}
      CLAUDE_API_KEY: ${CLAUDE_API_KEY:-}
      GITHUB_WEBHOOK_SECRET: ${GITHUB_WEBHOOK_SECRET:-devsecret}
      NODE_ENV: development
    ports: ["4000:4000"]
    depends_on: [ db, redis ]
    networks:
      - orchestrator-network
    volumes:
      - .:/app:cached
      - /var/run/docker.sock:/var/run/docker.sock
      - devcontainer-cache:/home/vscode/.cache
    cap_add:
      - NET_ADMIN
    privileged: true
    command: /bin/bash -c "/.devcontainer/init-firewall.sh && tail -f /dev/null"

  worker:
    build:
      context: .
      dockerfile: .devcontainer/Dockerfile
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgres://postgres:postgres@db:5432/orchestrator}
      CLAUDE_API_KEY: ${CLAUDE_API_KEY:-}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379}
      GITHUB_TOKEN: ${GITHUB_TOKEN:-}
      SANDBOX_IMAGE: ${SANDBOX_IMAGE:-claude-sandbox:latest}
      SANDBOX_WORKDIR: /workspace
      SANDBOX_NETWORK: none
      NODE_ENV: development
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - workspaces:/workspaces
      - .:/app:cached
      - devcontainer-cache:/home/vscode/.cache
    depends_on: [ db, redis ]
    networks:
      - orchestrator-network
    cap_add:
      - NET_ADMIN
    privileged: true
    command: /bin/bash -c "/.devcontainer/init-firewall.sh && cd /app/apps/worker && pnpm dev"

  sandbox-image:
    build:
      context: .
      dockerfile: Dockerfile.sandbox
    image: claude-sandbox:latest
    profiles: ["builder"]

networks:
  orchestrator-network:
    driver: bridge

volumes:
  pgdata: {}
  workspaces: {}
  devcontainer-cache: {}