version: "3.9"
services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: orchestrator
    ports: ["5433:5432"]
    volumes: [ "pgdata:/var/lib/postgresql/data" ]

  redis:
    image: redis:7-alpine
    ports: ["6380:6379"]

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    env_file:
      - .env.docker
    environment:
      DATABASE_URL: postgres://postgres:postgres@db:5432/orchestrator
      REDIS_URL: redis://redis:6379
    ports: ["4000:4000"]
    depends_on: [ db ]

  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    env_file:
      - .env.docker
    environment:
      DATABASE_URL: postgres://postgres:postgres@db:5432/orchestrator
      REDIS_URL: redis://redis:6379
      SANDBOX_IMAGE: ${SANDBOX_IMAGE:-claude-sandbox:latest}
      SANDBOX_WORKDIR: /workspace
      SANDBOX_NETWORK: none
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - workspaces:/workspaces
    depends_on: [ db, redis ]

  sandbox-image:
    build:
      context: .
      dockerfile: Dockerfile.sandbox
    image: claude-sandbox:latest
    profiles: ["builder"]

volumes:
  pgdata: {}
  workspaces: {}
