version: "3.9"
services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: orchestrator
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgres://postgres:postgres@db:5432/orchestrator}
      CLAUDE_API_KEY: ${CLAUDE_API_KEY:-}
      GITHUB_WEBHOOK_SECRET: ${GITHUB_WEBHOOK_SECRET:-devsecret}
    ports:
      - "4000:4000"
    depends_on:
      - db

  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgres://postgres:postgres@db:5432/orchestrator}
      CLAUDE_API_KEY: ${CLAUDE_API_KEY:-}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379}
      GITHUB_TOKEN: ${GITHUB_TOKEN:-}
      SANDBOX_IMAGE: ${SANDBOX_IMAGE:-claude-sandbox:latest}
      SANDBOX_WORKDIR: /workspace
      SANDBOX_NETWORK: none
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - workspaces:/workspaces
    depends_on:
      - db
      - redis

  # Build once; worker launches ephemeral containers FROM this image
  sandbox-image:
    build:
      context: .
      dockerfile: Dockerfile.sandbox
    image: claude-sandbox:latest
    profiles: ["builder"]

volumes:
  pgdata: {}
  workspaces: {}
